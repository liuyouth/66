/**
 * 声明全局变量
 */
//校验插件变量
var $valid;

$(function() {
	// 切换导航状态
	toggleNav(6, 0, 0);
	//初始化验证插件
	$valid = $("#addForm").Validform({
		btnSubmit:"#submitBtn", 
		//btnReset:".btn_reset",
		tiptype:4, 
		ignoreHidden:true,
		dragonfly:false,
		tipSweep:false,
		showAllError:true,
		postonce:true,
		ajaxPost:false,
		datatype:{
			
		},
		usePlugin:{
		},
		beforeCheck:function(curform){
			//在表单提交执行验证之前执行的函数，curform参数是当前表单对象。
			//这里明确return false的话将不会继续执行验证操作;	
		},
		beforeSubmit:function(curform){
			//在验证成功后，表单提交前执行的函数，curform参数是当前表单对象。
			//这里明确return false的话表单将不会提交;	
			return false;
		},
		callback:function(data){
			//返回数据data是json对象，{"info":"demo info","status":"y"}
			//info: 输出提示信息;
			//status: 返回提交数据的状态,是否提交成功。如可以用"y"表示提交成功，"n"表示提交失败，在ajax_post.php文件返回数据里自定字符，主要用在callback函数里根据该值执行相应的回调操作;
			//你也可以在ajax_post.php文件返回更多信息在这里获取，进行相应操作；
			//ajax遇到服务端错误时也会执行回调，这时的data是{ status:**, statusText:**, readyState:**, responseText:** }；
	 
			//这里执行回调操作;
			//注意：如果不是ajax方式提交表单，传入callback，这时data参数是当前表单对象，回调函数会在表单验证全部通过后执行，然后判断是否提交表单，如果callback里明确return false，则表单不会提交，如果return true或没有return，则会提交表单。
		}
	});
	
	
	
	/* = $("#myForm").Validform({
		 	btnSubmit: "#btn_sub", //提交按钮，from中存在“submit”按钮时可省略
		btnReset: "#btn_reset",//重置按钮，from中存在“reset”按钮时可省略 
		tiptype: 4,//错误信息提示方式
		ignoreHidden: true,//不验证hidden元素
		showAllError: true,//true：完全检测；false：短路检测
		//postonce: true//二次提交防御
		ajaxPost: true,//提交方式
		datatype: {//自定义datatype类型，可以是正则，也可以是函数。
			idCardNo:isIdCardNo
		},
		usePlugin: {},//插件
		beforeCheck: function(curform){

			setTimeout(function() {
				var id = $(".Validform_wrong:eq(0)")
					.closest(".am-tab-panel").attr("id");
				if (id) {
				    var no = id.replace("tab", "");
					$("#tabs").tabs('open', parseInt(no) - 1);
				}
		    }, 500);
		},
		beforeSubmit : function(curform) {
		  
	    }

		},
		callback : function(data) {
		 //这里不采用插件提交
			   if (data.msg) {
			alert("保存成功！");
		    } 
		}
	    });*/
});