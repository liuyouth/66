package com.rescam.sywm.server.controller.commodityBase;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.rescam.common.vo.ResultInfo;
import com.rescam.sywm.rs.uri.commodityBase.SYWMBrandURI;
import com.rescam.sywm.rs.uri.goodsOwner.SYWMRecipientURI;
import com.rescam.sywm.server.entity.Brands;
import com.rescam.sywm.server.service.commodityBase.BrandService;

@RestController
@RequestMapping(value=SYWMBrandURI.Base,method=RequestMethod.POST)
public class CommodityBaseController {
	
	@Autowired
	private BrandService brandService;
	
	@RequestMapping(value = SYWMBrandURI.Add)
	public ResultInfo addBrand(@ModelAttribute Brands brands){
		ResultInfo resultInfo = new ResultInfo();
		try {
			resultInfo.setMsg(brandService.addBrand(brands));
			resultInfo.setSuccess(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return resultInfo;
	}
	@RequestMapping(value = SYWMBrandURI.Read)
	public ResultInfo searchTables(@RequestParam Map<String, String> params){
		ResultInfo resultInfo = new ResultInfo();
		try {
			resultInfo.setMsg(brandService.readTables(params));
			resultInfo.setSuccess(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return resultInfo;
	}
	@RequestMapping(value = SYWMBrandURI.Count)
	public ResultInfo getCount(@RequestParam Map<String, String> params) throws Exception {
		ResultInfo result = new ResultInfo();
	
			Long count = brandService.getCount(params);
			result.setSuccess(true);
			result.setMsg(count);
	
		return result;
	}
	@RequestMapping(SYWMRecipientURI.Search)
	public ResultInfo search(@RequestParam Map<String, String> params) throws Exception {
		ResultInfo result = new ResultInfo();
			List<Brands> list = brandService.search(params);
			result.setSuccess(true);
			result.setMsg(list);
	

		return result;
	}
	@RequestMapping(value = SYWMBrandURI.Del)
	public ResultInfo del(@RequestParam Map<String, String> params) throws Exception{
		
		ResultInfo resultInfo = new ResultInfo();
		brandService.del(params.get("brandsId"));
		resultInfo.setMsg("删除成功！");
		resultInfo.setSuccess(true);
		
		return resultInfo;
		
	}
	@RequestMapping(value = SYWMBrandURI.Unique)
	public ResultInfo unique(@RequestParam Map<String, String> params){
		ResultInfo resultInfo = new ResultInfo();
		try {
			if( brandService.unique(params)){
				
				resultInfo.setSuccess(true);
				
			}else{
				resultInfo.setSuccess(false);
			}
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return resultInfo;
	}
	@RequestMapping(value = SYWMBrandURI.Updata)
	public ResultInfo updata(@ModelAttribute Brands brands){
		ResultInfo resultInfo  = new ResultInfo();
		try {
			brandService.updata(brands);
			resultInfo.setSuccess(true);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			resultInfo.setSuccess(false);
		}
		return resultInfo;
	}
}
