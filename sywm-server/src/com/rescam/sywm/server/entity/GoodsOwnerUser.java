package com.rescam.sywm.server.entity;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * GoodsOwnerUser generated by hbm2java
 */
@Entity
@Table(name = "goods_owner_user", catalog = "sywm")
public class GoodsOwnerUser implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Integer goodsOwnerUserId;
	private GoodsOwner goodsOwner;
	private String goodsOwnerName;
	private String loginName;
	private String loginPwd;
	private String pwdSalt;
	private String goodsOwnerUserName;
	private String goodsOwnerUserMobile;
	private boolean isDelete;
	private Set<DeliverOrder> deliverOrdersForUpdateUserId = new HashSet<DeliverOrder>(0);
	private Set<Damage> damages = new HashSet<Damage>(0);
	private Set<DeliverOrder> deliverOrdersForCommitUserId = new HashSet<DeliverOrder>(0);
	private Set<DeliverOrder> deliverOrdersForCreateUserId = new HashSet<DeliverOrder>(0);
	private Set<Destroy> destroys = new HashSet<Destroy>(0);
	private Set<ArrivalPlan> arrivalPlansForCreateUserId = new HashSet<ArrivalPlan>(0);
	private Set<ReturnInfo> returnInfosForUpdateUserId = new HashSet<ReturnInfo>(0);
	private Set<ReturnInfo> returnInfosForCommitUserId = new HashSet<ReturnInfo>(0);
	private Set<ArrivalPlan> arrivalPlansForCommitUserId = new HashSet<ArrivalPlan>(0);
	private Set<ArrivalPlan> arrivalPlansForUpdateUserId = new HashSet<ArrivalPlan>(0);
	private Set<ReturnInfo> returnInfosForCreateUserId = new HashSet<ReturnInfo>(0);

	public GoodsOwnerUser() {
	}

	public GoodsOwnerUser(GoodsOwner goodsOwner, String goodsOwnerName, String loginName, String loginPwd,
			String pwdSalt, boolean isDelete) {
		this.goodsOwner = goodsOwner;
		this.goodsOwnerName = goodsOwnerName;
		this.loginName = loginName;
		this.loginPwd = loginPwd;
		this.pwdSalt = pwdSalt;
		this.isDelete = isDelete;
	}

	public GoodsOwnerUser(GoodsOwner goodsOwner, String goodsOwnerName, String loginName, String loginPwd,
			String pwdSalt, String goodsOwnerUserName, String goodsOwnerUserMobile, boolean isDelete,
			Set<DeliverOrder> deliverOrdersForUpdateUserId, Set<Damage> damages,
			Set<DeliverOrder> deliverOrdersForCommitUserId, Set<DeliverOrder> deliverOrdersForCreateUserId,
			Set<Destroy> destroys, Set<ArrivalPlan> arrivalPlansForCreateUserId,
			Set<ReturnInfo> returnInfosForUpdateUserId, Set<ReturnInfo> returnInfosForCommitUserId,
			Set<ArrivalPlan> arrivalPlansForCommitUserId, Set<ArrivalPlan> arrivalPlansForUpdateUserId,
			Set<ReturnInfo> returnInfosForCreateUserId) {
		this.goodsOwner = goodsOwner;
		this.goodsOwnerName = goodsOwnerName;
		this.loginName = loginName;
		this.loginPwd = loginPwd;
		this.pwdSalt = pwdSalt;
		this.goodsOwnerUserName = goodsOwnerUserName;
		this.goodsOwnerUserMobile = goodsOwnerUserMobile;
		this.isDelete = isDelete;
		this.deliverOrdersForUpdateUserId = deliverOrdersForUpdateUserId;
		this.damages = damages;
		this.deliverOrdersForCommitUserId = deliverOrdersForCommitUserId;
		this.deliverOrdersForCreateUserId = deliverOrdersForCreateUserId;
		this.destroys = destroys;
		this.arrivalPlansForCreateUserId = arrivalPlansForCreateUserId;
		this.returnInfosForUpdateUserId = returnInfosForUpdateUserId;
		this.returnInfosForCommitUserId = returnInfosForCommitUserId;
		this.arrivalPlansForCommitUserId = arrivalPlansForCommitUserId;
		this.arrivalPlansForUpdateUserId = arrivalPlansForUpdateUserId;
		this.returnInfosForCreateUserId = returnInfosForCreateUserId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "goods_owner_user_id", unique = true, nullable = false)
	public Integer getGoodsOwnerUserId() {
		return this.goodsOwnerUserId;
	}

	public void setGoodsOwnerUserId(Integer goodsOwnerUserId) {
		this.goodsOwnerUserId = goodsOwnerUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "goods_owner_id", nullable = false)
	public GoodsOwner getGoodsOwner() {
		return this.goodsOwner;
	}

	public void setGoodsOwner(GoodsOwner goodsOwner) {
		this.goodsOwner = goodsOwner;
	}

	@Column(name = "goods_owner_name", nullable = false, length = 50)
	public String getGoodsOwnerName() {
		return this.goodsOwnerName;
	}

	public void setGoodsOwnerName(String goodsOwnerName) {
		this.goodsOwnerName = goodsOwnerName;
	}

	@Column(name = "login_name", nullable = false, length = 20)
	public String getLoginName() {
		return this.loginName;
	}

	public void setLoginName(String loginName) {
		this.loginName = loginName;
	}

	@Column(name = "login_pwd", nullable = false, length = 88)
	public String getLoginPwd() {
		return this.loginPwd;
	}

	public void setLoginPwd(String loginPwd) {
		this.loginPwd = loginPwd;
	}

	@Column(name = "pwd_salt", nullable = false, length = 44)
	public String getPwdSalt() {
		return this.pwdSalt;
	}

	public void setPwdSalt(String pwdSalt) {
		this.pwdSalt = pwdSalt;
	}

	@Column(name = "goods_owner_user_name", length = 20)
	public String getGoodsOwnerUserName() {
		return this.goodsOwnerUserName;
	}

	public void setGoodsOwnerUserName(String goodsOwnerUserName) {
		this.goodsOwnerUserName = goodsOwnerUserName;
	}

	@Column(name = "goods_owner_user_mobile", length = 20)
	public String getGoodsOwnerUserMobile() {
		return this.goodsOwnerUserMobile;
	}

	public void setGoodsOwnerUserMobile(String goodsOwnerUserMobile) {
		this.goodsOwnerUserMobile = goodsOwnerUserMobile;
	}

	@Column(name = "is_delete", nullable = false)
	public boolean isIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(boolean isDelete) {
		this.isDelete = isDelete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUserByUpdateUserId")
	public Set<DeliverOrder> getDeliverOrdersForUpdateUserId() {
		return this.deliverOrdersForUpdateUserId;
	}

	public void setDeliverOrdersForUpdateUserId(Set<DeliverOrder> deliverOrdersForUpdateUserId) {
		this.deliverOrdersForUpdateUserId = deliverOrdersForUpdateUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUser")
	public Set<Damage> getDamages() {
		return this.damages;
	}

	public void setDamages(Set<Damage> damages) {
		this.damages = damages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUserByCommitUserId")
	public Set<DeliverOrder> getDeliverOrdersForCommitUserId() {
		return this.deliverOrdersForCommitUserId;
	}

	public void setDeliverOrdersForCommitUserId(Set<DeliverOrder> deliverOrdersForCommitUserId) {
		this.deliverOrdersForCommitUserId = deliverOrdersForCommitUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUserByCreateUserId")
	public Set<DeliverOrder> getDeliverOrdersForCreateUserId() {
		return this.deliverOrdersForCreateUserId;
	}

	public void setDeliverOrdersForCreateUserId(Set<DeliverOrder> deliverOrdersForCreateUserId) {
		this.deliverOrdersForCreateUserId = deliverOrdersForCreateUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUser")
	public Set<Destroy> getDestroys() {
		return this.destroys;
	}

	public void setDestroys(Set<Destroy> destroys) {
		this.destroys = destroys;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUserByCreateUserId")
	public Set<ArrivalPlan> getArrivalPlansForCreateUserId() {
		return this.arrivalPlansForCreateUserId;
	}

	public void setArrivalPlansForCreateUserId(Set<ArrivalPlan> arrivalPlansForCreateUserId) {
		this.arrivalPlansForCreateUserId = arrivalPlansForCreateUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUserByUpdateUserId")
	public Set<ReturnInfo> getReturnInfosForUpdateUserId() {
		return this.returnInfosForUpdateUserId;
	}

	public void setReturnInfosForUpdateUserId(Set<ReturnInfo> returnInfosForUpdateUserId) {
		this.returnInfosForUpdateUserId = returnInfosForUpdateUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUserByCommitUserId")
	public Set<ReturnInfo> getReturnInfosForCommitUserId() {
		return this.returnInfosForCommitUserId;
	}

	public void setReturnInfosForCommitUserId(Set<ReturnInfo> returnInfosForCommitUserId) {
		this.returnInfosForCommitUserId = returnInfosForCommitUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUserByCommitUserId")
	public Set<ArrivalPlan> getArrivalPlansForCommitUserId() {
		return this.arrivalPlansForCommitUserId;
	}

	public void setArrivalPlansForCommitUserId(Set<ArrivalPlan> arrivalPlansForCommitUserId) {
		this.arrivalPlansForCommitUserId = arrivalPlansForCommitUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUserByUpdateUserId")
	public Set<ArrivalPlan> getArrivalPlansForUpdateUserId() {
		return this.arrivalPlansForUpdateUserId;
	}

	public void setArrivalPlansForUpdateUserId(Set<ArrivalPlan> arrivalPlansForUpdateUserId) {
		this.arrivalPlansForUpdateUserId = arrivalPlansForUpdateUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "goodsOwnerUserByCreateUserId")
	public Set<ReturnInfo> getReturnInfosForCreateUserId() {
		return this.returnInfosForCreateUserId;
	}

	public void setReturnInfosForCreateUserId(Set<ReturnInfo> returnInfosForCreateUserId) {
		this.returnInfosForCreateUserId = returnInfosForCreateUserId;
	}

}
