package com.rescam.sywm.server.entity;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * UserGroup generated by hbm2java
 */
@Entity
@Table(name = "user_group", catalog = "sywm")
public class UserGroup implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Integer userGroupId;
	private String userGroupName;
	private String userGroupRemark;
	private boolean isDelete;
	private Set<UserAuth> userAuths = new HashSet<UserAuth>(0);
	private Set<UserInfo> userInfos = new HashSet<UserInfo>(0);

	public UserGroup() {
	}

	public UserGroup(String userGroupName, boolean isDelete) {
		this.userGroupName = userGroupName;
		this.isDelete = isDelete;
	}

	public UserGroup(String userGroupName, String userGroupRemark, boolean isDelete, Set<UserAuth> userAuths,
			Set<UserInfo> userInfos) {
		this.userGroupName = userGroupName;
		this.userGroupRemark = userGroupRemark;
		this.isDelete = isDelete;
		this.userAuths = userAuths;
		this.userInfos = userInfos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "user_group_id", unique = true, nullable = false)
	public Integer getUserGroupId() {
		return this.userGroupId;
	}

	public void setUserGroupId(Integer userGroupId) {
		this.userGroupId = userGroupId;
	}

	@Column(name = "user_group_name", nullable = false, length = 20)
	public String getUserGroupName() {
		return this.userGroupName;
	}

	public void setUserGroupName(String userGroupName) {
		this.userGroupName = userGroupName;
	}

	@Column(name = "user_group_remark", length = 50)
	public String getUserGroupRemark() {
		return this.userGroupRemark;
	}

	public void setUserGroupRemark(String userGroupRemark) {
		this.userGroupRemark = userGroupRemark;
	}

	@Column(name = "is_delete", nullable = false)
	public boolean isIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(boolean isDelete) {
		this.isDelete = isDelete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userGroup")
	public Set<UserAuth> getUserAuths() {
		return this.userAuths;
	}

	public void setUserAuths(Set<UserAuth> userAuths) {
		this.userAuths = userAuths;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userGroup")
	public Set<UserInfo> getUserInfos() {
		return this.userInfos;
	}

	public void setUserInfos(Set<UserInfo> userInfos) {
		this.userInfos = userInfos;
	}

}
