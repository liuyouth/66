package com.rescam.sywm.server.entity;
// Generated 2016-7-1 17:35:13 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DeliverOrder generated by hbm2java
 */
@Entity
@Table(name = "deliver_order", catalog = "sywm")
public class DeliverOrder implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Integer deliverOrderId;
	private GoodsOwner goodsOwner;
	private GoodsOwnerUser goodsOwnerUserByUpdateUserId;
	private GoodsOwnerUser goodsOwnerUserByCommitUserId;
	private GoodsOwnerUser goodsOwnerUserByCreateUserId;
	private Recipient recipient;
	private String orderCode;
	private String recipientName;
	private String recipientAddress;
	private String recipientContact;
	private String recipientContactPhone;
	private int deliverMode;
	private int payment;
	private int orderType;
	private BigDecimal salesAmount;
	private Date estimatedArrivalDate;
	private Date expectedArrivalDate;
	private int orderStatus;
	private int paymentStatus;
	private boolean isRepacking;
	private String repackingExplain;
	private String salesmanName;
	private String salesmanContactPhone;
	private Date createTime;
	private Date updateTime;
	private Date commitTime;
	private String orderRemark;
	private boolean isDelete;
	private Set<DeliverOrderDetails> deliverOrderDetailses = new HashSet<DeliverOrderDetails>(0);
	private Set<DeliverOrderBatchDetails> deliverOrderBatchDetailses = new HashSet<DeliverOrderBatchDetails>(0);
	private Set<DeliverOrderGiftDetails> deliverOrderGiftDetailses = new HashSet<DeliverOrderGiftDetails>(0);

	public DeliverOrder() {
	}

	public DeliverOrder(GoodsOwner goodsOwner, GoodsOwnerUser goodsOwnerUserByUpdateUserId,
			GoodsOwnerUser goodsOwnerUserByCommitUserId, GoodsOwnerUser goodsOwnerUserByCreateUserId,
			Recipient recipient, String orderCode, String recipientName, String recipientAddress,
			String recipientContact, String recipientContactPhone, int deliverMode, int payment, int orderType,
			BigDecimal salesAmount, Date estimatedArrivalDate, Date expectedArrivalDate, int orderStatus,
			int paymentStatus, boolean isRepacking, String salesmanName, String salesmanContactPhone, Date createTime,
			Date updateTime, Date commitTime, boolean isDelete) {
		this.goodsOwner = goodsOwner;
		this.goodsOwnerUserByUpdateUserId = goodsOwnerUserByUpdateUserId;
		this.goodsOwnerUserByCommitUserId = goodsOwnerUserByCommitUserId;
		this.goodsOwnerUserByCreateUserId = goodsOwnerUserByCreateUserId;
		this.recipient = recipient;
		this.orderCode = orderCode;
		this.recipientName = recipientName;
		this.recipientAddress = recipientAddress;
		this.recipientContact = recipientContact;
		this.recipientContactPhone = recipientContactPhone;
		this.deliverMode = deliverMode;
		this.payment = payment;
		this.orderType = orderType;
		this.salesAmount = salesAmount;
		this.estimatedArrivalDate = estimatedArrivalDate;
		this.expectedArrivalDate = expectedArrivalDate;
		this.orderStatus = orderStatus;
		this.paymentStatus = paymentStatus;
		this.isRepacking = isRepacking;
		this.salesmanName = salesmanName;
		this.salesmanContactPhone = salesmanContactPhone;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.commitTime = commitTime;
		this.isDelete = isDelete;
	}

	public DeliverOrder(GoodsOwner goodsOwner, GoodsOwnerUser goodsOwnerUserByUpdateUserId,
			GoodsOwnerUser goodsOwnerUserByCommitUserId, GoodsOwnerUser goodsOwnerUserByCreateUserId,
			Recipient recipient, String orderCode, String recipientName, String recipientAddress,
			String recipientContact, String recipientContactPhone, int deliverMode, int payment, int orderType,
			BigDecimal salesAmount, Date estimatedArrivalDate, Date expectedArrivalDate, int orderStatus,
			int paymentStatus, boolean isRepacking, String repackingExplain, String salesmanName,
			String salesmanContactPhone, Date createTime, Date updateTime, Date commitTime, String orderRemark,
			boolean isDelete, Set<DeliverOrderDetails> deliverOrderDetailses,
			Set<DeliverOrderBatchDetails> deliverOrderBatchDetailses,
			Set<DeliverOrderGiftDetails> deliverOrderGiftDetailses) {
		this.goodsOwner = goodsOwner;
		this.goodsOwnerUserByUpdateUserId = goodsOwnerUserByUpdateUserId;
		this.goodsOwnerUserByCommitUserId = goodsOwnerUserByCommitUserId;
		this.goodsOwnerUserByCreateUserId = goodsOwnerUserByCreateUserId;
		this.recipient = recipient;
		this.orderCode = orderCode;
		this.recipientName = recipientName;
		this.recipientAddress = recipientAddress;
		this.recipientContact = recipientContact;
		this.recipientContactPhone = recipientContactPhone;
		this.deliverMode = deliverMode;
		this.payment = payment;
		this.orderType = orderType;
		this.salesAmount = salesAmount;
		this.estimatedArrivalDate = estimatedArrivalDate;
		this.expectedArrivalDate = expectedArrivalDate;
		this.orderStatus = orderStatus;
		this.paymentStatus = paymentStatus;
		this.isRepacking = isRepacking;
		this.repackingExplain = repackingExplain;
		this.salesmanName = salesmanName;
		this.salesmanContactPhone = salesmanContactPhone;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.commitTime = commitTime;
		this.orderRemark = orderRemark;
		this.isDelete = isDelete;
		this.deliverOrderDetailses = deliverOrderDetailses;
		this.deliverOrderBatchDetailses = deliverOrderBatchDetailses;
		this.deliverOrderGiftDetailses = deliverOrderGiftDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "deliver_order_id", unique = true, nullable = false)
	public Integer getDeliverOrderId() {
		return this.deliverOrderId;
	}

	public void setDeliverOrderId(Integer deliverOrderId) {
		this.deliverOrderId = deliverOrderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "goods_owner_id", nullable = false)
	public GoodsOwner getGoodsOwner() {
		return this.goodsOwner;
	}

	public void setGoodsOwner(GoodsOwner goodsOwner) {
		this.goodsOwner = goodsOwner;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "update_user_id", nullable = false)
	public GoodsOwnerUser getGoodsOwnerUserByUpdateUserId() {
		return this.goodsOwnerUserByUpdateUserId;
	}

	public void setGoodsOwnerUserByUpdateUserId(GoodsOwnerUser goodsOwnerUserByUpdateUserId) {
		this.goodsOwnerUserByUpdateUserId = goodsOwnerUserByUpdateUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "commit_user_id", nullable = false)
	public GoodsOwnerUser getGoodsOwnerUserByCommitUserId() {
		return this.goodsOwnerUserByCommitUserId;
	}

	public void setGoodsOwnerUserByCommitUserId(GoodsOwnerUser goodsOwnerUserByCommitUserId) {
		this.goodsOwnerUserByCommitUserId = goodsOwnerUserByCommitUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "create_user_id", nullable = false)
	public GoodsOwnerUser getGoodsOwnerUserByCreateUserId() {
		return this.goodsOwnerUserByCreateUserId;
	}

	public void setGoodsOwnerUserByCreateUserId(GoodsOwnerUser goodsOwnerUserByCreateUserId) {
		this.goodsOwnerUserByCreateUserId = goodsOwnerUserByCreateUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "recipient_id", nullable = false)
	public Recipient getRecipient() {
		return this.recipient;
	}

	public void setRecipient(Recipient recipient) {
		this.recipient = recipient;
	}

	@Column(name = "order_code", nullable = false, length = 14)
	public String getOrderCode() {
		return this.orderCode;
	}

	public void setOrderCode(String orderCode) {
		this.orderCode = orderCode;
	}

	@Column(name = "recipient_name", nullable = false, length = 50)
	public String getRecipientName() {
		return this.recipientName;
	}

	public void setRecipientName(String recipientName) {
		this.recipientName = recipientName;
	}

	@Column(name = "recipient_address", nullable = false, length = 100)
	public String getRecipientAddress() {
		return this.recipientAddress;
	}

	public void setRecipientAddress(String recipientAddress) {
		this.recipientAddress = recipientAddress;
	}

	@Column(name = "recipient_contact", nullable = false, length = 20)
	public String getRecipientContact() {
		return this.recipientContact;
	}

	public void setRecipientContact(String recipientContact) {
		this.recipientContact = recipientContact;
	}

	@Column(name = "recipient_contact_phone", nullable = false, length = 20)
	public String getRecipientContactPhone() {
		return this.recipientContactPhone;
	}

	public void setRecipientContactPhone(String recipientContactPhone) {
		this.recipientContactPhone = recipientContactPhone;
	}

	@Column(name = "deliver_mode", nullable = false)
	public int getDeliverMode() {
		return this.deliverMode;
	}

	public void setDeliverMode(int deliverMode) {
		this.deliverMode = deliverMode;
	}

	@Column(name = "payment", nullable = false)
	public int getPayment() {
		return this.payment;
	}

	public void setPayment(int payment) {
		this.payment = payment;
	}

	@Column(name = "order_type", nullable = false)
	public int getOrderType() {
		return this.orderType;
	}

	public void setOrderType(int orderType) {
		this.orderType = orderType;
	}

	@Column(name = "sales_amount", nullable = false, precision = 15)
	public BigDecimal getSalesAmount() {
		return this.salesAmount;
	}

	public void setSalesAmount(BigDecimal salesAmount) {
		this.salesAmount = salesAmount;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "estimated_arrival_date", nullable = false, length = 10)
	public Date getEstimatedArrivalDate() {
		return this.estimatedArrivalDate;
	}

	public void setEstimatedArrivalDate(Date estimatedArrivalDate) {
		this.estimatedArrivalDate = estimatedArrivalDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "expected_arrival_date", nullable = false, length = 10)
	public Date getExpectedArrivalDate() {
		return this.expectedArrivalDate;
	}

	public void setExpectedArrivalDate(Date expectedArrivalDate) {
		this.expectedArrivalDate = expectedArrivalDate;
	}

	@Column(name = "order_status", nullable = false)
	public int getOrderStatus() {
		return this.orderStatus;
	}

	public void setOrderStatus(int orderStatus) {
		this.orderStatus = orderStatus;
	}

	@Column(name = "payment_status", nullable = false)
	public int getPaymentStatus() {
		return this.paymentStatus;
	}

	public void setPaymentStatus(int paymentStatus) {
		this.paymentStatus = paymentStatus;
	}

	@Column(name = "is_repacking", nullable = false)
	public boolean isIsRepacking() {
		return this.isRepacking;
	}

	public void setIsRepacking(boolean isRepacking) {
		this.isRepacking = isRepacking;
	}

	@Column(name = "repacking_explain", length = 200)
	public String getRepackingExplain() {
		return this.repackingExplain;
	}

	public void setRepackingExplain(String repackingExplain) {
		this.repackingExplain = repackingExplain;
	}

	@Column(name = "salesman_name", nullable = false, length = 20)
	public String getSalesmanName() {
		return this.salesmanName;
	}

	public void setSalesmanName(String salesmanName) {
		this.salesmanName = salesmanName;
	}

	@Column(name = "salesman_contact_phone", nullable = false, length = 20)
	public String getSalesmanContactPhone() {
		return this.salesmanContactPhone;
	}

	public void setSalesmanContactPhone(String salesmanContactPhone) {
		this.salesmanContactPhone = salesmanContactPhone;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", nullable = false, length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", nullable = false, length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "commit_time", nullable = false, length = 19)
	public Date getCommitTime() {
		return this.commitTime;
	}

	public void setCommitTime(Date commitTime) {
		this.commitTime = commitTime;
	}

	@Column(name = "order_remark", length = 200)
	public String getOrderRemark() {
		return this.orderRemark;
	}

	public void setOrderRemark(String orderRemark) {
		this.orderRemark = orderRemark;
	}

	@Column(name = "is_delete", nullable = false)
	public boolean isIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(boolean isDelete) {
		this.isDelete = isDelete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "deliverOrder")
	public Set<DeliverOrderDetails> getDeliverOrderDetailses() {
		return this.deliverOrderDetailses;
	}

	public void setDeliverOrderDetailses(Set<DeliverOrderDetails> deliverOrderDetailses) {
		this.deliverOrderDetailses = deliverOrderDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "deliverOrder")
	public Set<DeliverOrderBatchDetails> getDeliverOrderBatchDetailses() {
		return this.deliverOrderBatchDetailses;
	}

	public void setDeliverOrderBatchDetailses(Set<DeliverOrderBatchDetails> deliverOrderBatchDetailses) {
		this.deliverOrderBatchDetailses = deliverOrderBatchDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "deliverOrder")
	public Set<DeliverOrderGiftDetails> getDeliverOrderGiftDetailses() {
		return this.deliverOrderGiftDetailses;
	}

	public void setDeliverOrderGiftDetailses(Set<DeliverOrderGiftDetails> deliverOrderGiftDetailses) {
		this.deliverOrderGiftDetailses = deliverOrderGiftDetailses;
	}

}
