package com.rescam.sywm.server.entity;

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CommodityPacking generated by hbm2java
 */
@Entity
@Table(name = "commodity_packing", catalog = "sywm")
public class CommodityPacking implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Integer commodityPackingId;
	private CommodityBase commodityBase;
	private String commodityPackingUnit;
	private BigDecimal commodityNetWeight;
	private BigDecimal commodityGrossWeight;
	private BigDecimal commodityPackingLength;
	private BigDecimal commodityPackingWidth;
	private BigDecimal commodityPackingHeight;
	private int commodityPackingQuantity;
	private boolean isDelete;
	private Set<ArrivalPlanDetails> arrivalPlanDetailses = new HashSet<ArrivalPlanDetails>(0);
	private Set<StockPallets> stockPalletses = new HashSet<StockPallets>(0);
	private Set<DeliverOrderDetails> deliverOrderDetailses = new HashSet<DeliverOrderDetails>(0);
	private Set<DamageDetails> damageDetailses = new HashSet<DamageDetails>(0);
	private Set<ReturnDetails> returnDetailses = new HashSet<ReturnDetails>(0);
	private Set<DeliverOrderBatchDetails> deliverOrderBatchDetailses = new HashSet<DeliverOrderBatchDetails>(0);
	private Set<ReturnInWarehouse> returnInWarehouses = new HashSet<ReturnInWarehouse>(0);
	private Set<LoadPallets> loadPalletses = new HashSet<LoadPallets>(0);
	private Set<DeliverOrderGiftDetails> deliverOrderGiftDetailses = new HashSet<DeliverOrderGiftDetails>(0);
	private Set<DamageInWarehouse> damageInWarehouses = new HashSet<DamageInWarehouse>(0);
	private Set<GoodsOwnerCommodity> goodsOwnerCommodities = new HashSet<GoodsOwnerCommodity>(0);
	private Set<StockBoxs> stockBoxses = new HashSet<StockBoxs>(0);
	private Set<DestroyDetails> destroyDetailses = new HashSet<DestroyDetails>(0);

	public CommodityPacking() {
	}

	public CommodityPacking(CommodityBase commodityBase, String commodityPackingUnit, BigDecimal commodityNetWeight,
			BigDecimal commodityGrossWeight, BigDecimal commodityPackingLength, BigDecimal commodityPackingWidth,
			BigDecimal commodityPackingHeight, int commodityPackingQuantity, boolean isDelete) {
		this.commodityBase = commodityBase;
		this.commodityPackingUnit = commodityPackingUnit;
		this.commodityNetWeight = commodityNetWeight;
		this.commodityGrossWeight = commodityGrossWeight;
		this.commodityPackingLength = commodityPackingLength;
		this.commodityPackingWidth = commodityPackingWidth;
		this.commodityPackingHeight = commodityPackingHeight;
		this.commodityPackingQuantity = commodityPackingQuantity;
		this.isDelete = isDelete;
	}

	public CommodityPacking(CommodityBase commodityBase, String commodityPackingUnit, BigDecimal commodityNetWeight,
			BigDecimal commodityGrossWeight, BigDecimal commodityPackingLength, BigDecimal commodityPackingWidth,
			BigDecimal commodityPackingHeight, int commodityPackingQuantity, boolean isDelete,
			Set<ArrivalPlanDetails> arrivalPlanDetailses, Set<StockPallets> stockPalletses,
			Set<DeliverOrderDetails> deliverOrderDetailses, Set<DamageDetails> damageDetailses,
			Set<ReturnDetails> returnDetailses, Set<DeliverOrderBatchDetails> deliverOrderBatchDetailses,
			Set<ReturnInWarehouse> returnInWarehouses, Set<LoadPallets> loadPalletses,
			Set<DeliverOrderGiftDetails> deliverOrderGiftDetailses, Set<DamageInWarehouse> damageInWarehouses,
			Set<GoodsOwnerCommodity> goodsOwnerCommodities, Set<StockBoxs> stockBoxses,
			Set<DestroyDetails> destroyDetailses) {
		this.commodityBase = commodityBase;
		this.commodityPackingUnit = commodityPackingUnit;
		this.commodityNetWeight = commodityNetWeight;
		this.commodityGrossWeight = commodityGrossWeight;
		this.commodityPackingLength = commodityPackingLength;
		this.commodityPackingWidth = commodityPackingWidth;
		this.commodityPackingHeight = commodityPackingHeight;
		this.commodityPackingQuantity = commodityPackingQuantity;
		this.isDelete = isDelete;
		this.arrivalPlanDetailses = arrivalPlanDetailses;
		this.stockPalletses = stockPalletses;
		this.deliverOrderDetailses = deliverOrderDetailses;
		this.damageDetailses = damageDetailses;
		this.returnDetailses = returnDetailses;
		this.deliverOrderBatchDetailses = deliverOrderBatchDetailses;
		this.returnInWarehouses = returnInWarehouses;
		this.loadPalletses = loadPalletses;
		this.deliverOrderGiftDetailses = deliverOrderGiftDetailses;
		this.damageInWarehouses = damageInWarehouses;
		this.goodsOwnerCommodities = goodsOwnerCommodities;
		this.stockBoxses = stockBoxses;
		this.destroyDetailses = destroyDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "commodity_packing_id", unique = true, nullable = false)
	public Integer getCommodityPackingId() {
		return this.commodityPackingId;
	}

	public void setCommodityPackingId(Integer commodityPackingId) {
		this.commodityPackingId = commodityPackingId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "commodity_base_id", nullable = false)
	public CommodityBase getCommodityBase() {
		return this.commodityBase;
	}

	public void setCommodityBase(CommodityBase commodityBase) {
		this.commodityBase = commodityBase;
	}

	@Column(name = "commodity_packing_unit", nullable = false, length = 10)
	public String getCommodityPackingUnit() {
		return this.commodityPackingUnit;
	}

	public void setCommodityPackingUnit(String commodityPackingUnit) {
		this.commodityPackingUnit = commodityPackingUnit;
	}

	@Column(name = "commodity_net_weight", nullable = false, precision = 10, scale = 3)
	public BigDecimal getCommodityNetWeight() {
		return this.commodityNetWeight;
	}

	public void setCommodityNetWeight(BigDecimal commodityNetWeight) {
		this.commodityNetWeight = commodityNetWeight;
	}

	@Column(name = "commodity_gross_weight", nullable = false, precision = 10, scale = 3)
	public BigDecimal getCommodityGrossWeight() {
		return this.commodityGrossWeight;
	}

	public void setCommodityGrossWeight(BigDecimal commodityGrossWeight) {
		this.commodityGrossWeight = commodityGrossWeight;
	}

	@Column(name = "commodity_packing_length", nullable = false, precision = 6)
	public BigDecimal getCommodityPackingLength() {
		return this.commodityPackingLength;
	}

	public void setCommodityPackingLength(BigDecimal commodityPackingLength) {
		this.commodityPackingLength = commodityPackingLength;
	}

	@Column(name = "commodity_packing_width", nullable = false, precision = 6)
	public BigDecimal getCommodityPackingWidth() {
		return this.commodityPackingWidth;
	}

	public void setCommodityPackingWidth(BigDecimal commodityPackingWidth) {
		this.commodityPackingWidth = commodityPackingWidth;
	}

	@Column(name = "commodity_packing_height", nullable = false, precision = 6)
	public BigDecimal getCommodityPackingHeight() {
		return this.commodityPackingHeight;
	}

	public void setCommodityPackingHeight(BigDecimal commodityPackingHeight) {
		this.commodityPackingHeight = commodityPackingHeight;
	}

	@Column(name = "commodity_packing_quantity", nullable = false)
	public int getCommodityPackingQuantity() {
		return this.commodityPackingQuantity;
	}

	public void setCommodityPackingQuantity(int commodityPackingQuantity) {
		this.commodityPackingQuantity = commodityPackingQuantity;
	}

	@Column(name = "is_delete", nullable = false)
	public boolean isIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(boolean isDelete) {
		this.isDelete = isDelete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<ArrivalPlanDetails> getArrivalPlanDetailses() {
		return this.arrivalPlanDetailses;
	}

	public void setArrivalPlanDetailses(Set<ArrivalPlanDetails> arrivalPlanDetailses) {
		this.arrivalPlanDetailses = arrivalPlanDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<StockPallets> getStockPalletses() {
		return this.stockPalletses;
	}

	public void setStockPalletses(Set<StockPallets> stockPalletses) {
		this.stockPalletses = stockPalletses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<DeliverOrderDetails> getDeliverOrderDetailses() {
		return this.deliverOrderDetailses;
	}

	public void setDeliverOrderDetailses(Set<DeliverOrderDetails> deliverOrderDetailses) {
		this.deliverOrderDetailses = deliverOrderDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<DamageDetails> getDamageDetailses() {
		return this.damageDetailses;
	}

	public void setDamageDetailses(Set<DamageDetails> damageDetailses) {
		this.damageDetailses = damageDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<ReturnDetails> getReturnDetailses() {
		return this.returnDetailses;
	}

	public void setReturnDetailses(Set<ReturnDetails> returnDetailses) {
		this.returnDetailses = returnDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<DeliverOrderBatchDetails> getDeliverOrderBatchDetailses() {
		return this.deliverOrderBatchDetailses;
	}

	public void setDeliverOrderBatchDetailses(Set<DeliverOrderBatchDetails> deliverOrderBatchDetailses) {
		this.deliverOrderBatchDetailses = deliverOrderBatchDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<ReturnInWarehouse> getReturnInWarehouses() {
		return this.returnInWarehouses;
	}

	public void setReturnInWarehouses(Set<ReturnInWarehouse> returnInWarehouses) {
		this.returnInWarehouses = returnInWarehouses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<LoadPallets> getLoadPalletses() {
		return this.loadPalletses;
	}

	public void setLoadPalletses(Set<LoadPallets> loadPalletses) {
		this.loadPalletses = loadPalletses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<DeliverOrderGiftDetails> getDeliverOrderGiftDetailses() {
		return this.deliverOrderGiftDetailses;
	}

	public void setDeliverOrderGiftDetailses(Set<DeliverOrderGiftDetails> deliverOrderGiftDetailses) {
		this.deliverOrderGiftDetailses = deliverOrderGiftDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<DamageInWarehouse> getDamageInWarehouses() {
		return this.damageInWarehouses;
	}

	public void setDamageInWarehouses(Set<DamageInWarehouse> damageInWarehouses) {
		this.damageInWarehouses = damageInWarehouses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<GoodsOwnerCommodity> getGoodsOwnerCommodities() {
		return this.goodsOwnerCommodities;
	}

	public void setGoodsOwnerCommodities(Set<GoodsOwnerCommodity> goodsOwnerCommodities) {
		this.goodsOwnerCommodities = goodsOwnerCommodities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<StockBoxs> getStockBoxses() {
		return this.stockBoxses;
	}

	public void setStockBoxses(Set<StockBoxs> stockBoxses) {
		this.stockBoxses = stockBoxses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityPacking")
	public Set<DestroyDetails> getDestroyDetailses() {
		return this.destroyDetailses;
	}

	public void setDestroyDetailses(Set<DestroyDetails> destroyDetailses) {
		this.destroyDetailses = destroyDetailses;
	}

}
