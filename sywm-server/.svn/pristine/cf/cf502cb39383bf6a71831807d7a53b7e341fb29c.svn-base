package com.rescam.sywm.server.entity;
// Generated 2016-7-1 17:35:13 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * UserInfo generated by hbm2java
 */
@Entity
@Table(name = "user_info", catalog = "sywm")
public class UserInfo implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Integer userInfoId;
	private UserGroup userGroup;
	private String loginName;
	private String loginPwd;
	private String pwdSalt;
	private String userName;
	private String userMobile;
	private boolean isDelete;
	private Set<Damage> damages = new HashSet<Damage>(0);
	private Set<DamageInWarehouse> damageInWarehousesForStackingUserId = new HashSet<DamageInWarehouse>(0);
	private Set<ReturnInWarehouse> returnInWarehousesForLoadPalletsUserId = new HashSet<ReturnInWarehouse>(0);
	private Set<LoadPallets> loadPalletsesForStackingUserId = new HashSet<LoadPallets>(0);
	private Set<ReturnInWarehouse> returnInWarehousesForPasteUserId = new HashSet<ReturnInWarehouse>(0);
	private Set<LoadPallets> loadPalletsesForLoadPalletsUserId = new HashSet<LoadPallets>(0);
	private Set<ReturnInWarehouse> returnInWarehousesForStackingUserId = new HashSet<ReturnInWarehouse>(0);
	private Set<Sorting> sortingsForCommitUserId = new HashSet<Sorting>(0);
	private Set<Stocktaking> stocktakings = new HashSet<Stocktaking>(0);
	private Set<Sorting> sortingsForUpdateUserId = new HashSet<Sorting>(0);
	private Set<Sorting> sortingsForCreateUserId = new HashSet<Sorting>(0);
	private Set<StockBoxs> stockBoxsesForUnpackingUserId = new HashSet<StockBoxs>(0);
	private Set<StockBoxs> stockBoxsesForPasteUserId = new HashSet<StockBoxs>(0);
	private Set<DamageInWarehouse> damageInWarehousesForLoadPalletsUserId = new HashSet<DamageInWarehouse>(0);
	private Set<DamageInWarehouse> damageInWarehousesForPasteUserId = new HashSet<DamageInWarehouse>(0);
	private Set<Destroy> destroys = new HashSet<Destroy>(0);

	public UserInfo() {
	}

	public UserInfo(String loginName, String loginPwd, String pwdSalt, String userName, boolean isDelete) {
		this.loginName = loginName;
		this.loginPwd = loginPwd;
		this.pwdSalt = pwdSalt;
		this.userName = userName;
		this.isDelete = isDelete;
	}

	public UserInfo(UserGroup userGroup, String loginName, String loginPwd, String pwdSalt, String userName,
			String userMobile, boolean isDelete, Set<Damage> damages,
			Set<DamageInWarehouse> damageInWarehousesForStackingUserId,
			Set<ReturnInWarehouse> returnInWarehousesForLoadPalletsUserId,
			Set<LoadPallets> loadPalletsesForStackingUserId, Set<ReturnInWarehouse> returnInWarehousesForPasteUserId,
			Set<LoadPallets> loadPalletsesForLoadPalletsUserId,
			Set<ReturnInWarehouse> returnInWarehousesForStackingUserId, Set<Sorting> sortingsForCommitUserId,
			Set<Stocktaking> stocktakings, Set<Sorting> sortingsForUpdateUserId, Set<Sorting> sortingsForCreateUserId,
			Set<StockBoxs> stockBoxsesForUnpackingUserId, Set<StockBoxs> stockBoxsesForPasteUserId,
			Set<DamageInWarehouse> damageInWarehousesForLoadPalletsUserId,
			Set<DamageInWarehouse> damageInWarehousesForPasteUserId, Set<Destroy> destroys) {
		this.userGroup = userGroup;
		this.loginName = loginName;
		this.loginPwd = loginPwd;
		this.pwdSalt = pwdSalt;
		this.userName = userName;
		this.userMobile = userMobile;
		this.isDelete = isDelete;
		this.damages = damages;
		this.damageInWarehousesForStackingUserId = damageInWarehousesForStackingUserId;
		this.returnInWarehousesForLoadPalletsUserId = returnInWarehousesForLoadPalletsUserId;
		this.loadPalletsesForStackingUserId = loadPalletsesForStackingUserId;
		this.returnInWarehousesForPasteUserId = returnInWarehousesForPasteUserId;
		this.loadPalletsesForLoadPalletsUserId = loadPalletsesForLoadPalletsUserId;
		this.returnInWarehousesForStackingUserId = returnInWarehousesForStackingUserId;
		this.sortingsForCommitUserId = sortingsForCommitUserId;
		this.stocktakings = stocktakings;
		this.sortingsForUpdateUserId = sortingsForUpdateUserId;
		this.sortingsForCreateUserId = sortingsForCreateUserId;
		this.stockBoxsesForUnpackingUserId = stockBoxsesForUnpackingUserId;
		this.stockBoxsesForPasteUserId = stockBoxsesForPasteUserId;
		this.damageInWarehousesForLoadPalletsUserId = damageInWarehousesForLoadPalletsUserId;
		this.damageInWarehousesForPasteUserId = damageInWarehousesForPasteUserId;
		this.destroys = destroys;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "user_info_id", unique = true, nullable = false)
	public Integer getUserInfoId() {
		return this.userInfoId;
	}

	public void setUserInfoId(Integer userInfoId) {
		this.userInfoId = userInfoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_group_id")
	public UserGroup getUserGroup() {
		return this.userGroup;
	}

	public void setUserGroup(UserGroup userGroup) {
		this.userGroup = userGroup;
	}

	@Column(name = "login_name", nullable = false, length = 20)
	public String getLoginName() {
		return this.loginName;
	}

	public void setLoginName(String loginName) {
		this.loginName = loginName;
	}

	@Column(name = "login_pwd", nullable = false, length = 88)
	public String getLoginPwd() {
		return this.loginPwd;
	}

	public void setLoginPwd(String loginPwd) {
		this.loginPwd = loginPwd;
	}

	@Column(name = "pwd_salt", nullable = false, length = 44)
	public String getPwdSalt() {
		return this.pwdSalt;
	}

	public void setPwdSalt(String pwdSalt) {
		this.pwdSalt = pwdSalt;
	}

	@Column(name = "user_name", nullable = false, length = 20)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "user_mobile", length = 20)
	public String getUserMobile() {
		return this.userMobile;
	}

	public void setUserMobile(String userMobile) {
		this.userMobile = userMobile;
	}

	@Column(name = "is_delete", nullable = false)
	public boolean isIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(boolean isDelete) {
		this.isDelete = isDelete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfo")
	public Set<Damage> getDamages() {
		return this.damages;
	}

	public void setDamages(Set<Damage> damages) {
		this.damages = damages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByStackingUserId")
	public Set<DamageInWarehouse> getDamageInWarehousesForStackingUserId() {
		return this.damageInWarehousesForStackingUserId;
	}

	public void setDamageInWarehousesForStackingUserId(Set<DamageInWarehouse> damageInWarehousesForStackingUserId) {
		this.damageInWarehousesForStackingUserId = damageInWarehousesForStackingUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByLoadPalletsUserId")
	public Set<ReturnInWarehouse> getReturnInWarehousesForLoadPalletsUserId() {
		return this.returnInWarehousesForLoadPalletsUserId;
	}

	public void setReturnInWarehousesForLoadPalletsUserId(
			Set<ReturnInWarehouse> returnInWarehousesForLoadPalletsUserId) {
		this.returnInWarehousesForLoadPalletsUserId = returnInWarehousesForLoadPalletsUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByStackingUserId")
	public Set<LoadPallets> getLoadPalletsesForStackingUserId() {
		return this.loadPalletsesForStackingUserId;
	}

	public void setLoadPalletsesForStackingUserId(Set<LoadPallets> loadPalletsesForStackingUserId) {
		this.loadPalletsesForStackingUserId = loadPalletsesForStackingUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByPasteUserId")
	public Set<ReturnInWarehouse> getReturnInWarehousesForPasteUserId() {
		return this.returnInWarehousesForPasteUserId;
	}

	public void setReturnInWarehousesForPasteUserId(Set<ReturnInWarehouse> returnInWarehousesForPasteUserId) {
		this.returnInWarehousesForPasteUserId = returnInWarehousesForPasteUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByLoadPalletsUserId")
	public Set<LoadPallets> getLoadPalletsesForLoadPalletsUserId() {
		return this.loadPalletsesForLoadPalletsUserId;
	}

	public void setLoadPalletsesForLoadPalletsUserId(Set<LoadPallets> loadPalletsesForLoadPalletsUserId) {
		this.loadPalletsesForLoadPalletsUserId = loadPalletsesForLoadPalletsUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByStackingUserId")
	public Set<ReturnInWarehouse> getReturnInWarehousesForStackingUserId() {
		return this.returnInWarehousesForStackingUserId;
	}

	public void setReturnInWarehousesForStackingUserId(Set<ReturnInWarehouse> returnInWarehousesForStackingUserId) {
		this.returnInWarehousesForStackingUserId = returnInWarehousesForStackingUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByCommitUserId")
	public Set<Sorting> getSortingsForCommitUserId() {
		return this.sortingsForCommitUserId;
	}

	public void setSortingsForCommitUserId(Set<Sorting> sortingsForCommitUserId) {
		this.sortingsForCommitUserId = sortingsForCommitUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfo")
	public Set<Stocktaking> getStocktakings() {
		return this.stocktakings;
	}

	public void setStocktakings(Set<Stocktaking> stocktakings) {
		this.stocktakings = stocktakings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByUpdateUserId")
	public Set<Sorting> getSortingsForUpdateUserId() {
		return this.sortingsForUpdateUserId;
	}

	public void setSortingsForUpdateUserId(Set<Sorting> sortingsForUpdateUserId) {
		this.sortingsForUpdateUserId = sortingsForUpdateUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByCreateUserId")
	public Set<Sorting> getSortingsForCreateUserId() {
		return this.sortingsForCreateUserId;
	}

	public void setSortingsForCreateUserId(Set<Sorting> sortingsForCreateUserId) {
		this.sortingsForCreateUserId = sortingsForCreateUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByUnpackingUserId")
	public Set<StockBoxs> getStockBoxsesForUnpackingUserId() {
		return this.stockBoxsesForUnpackingUserId;
	}

	public void setStockBoxsesForUnpackingUserId(Set<StockBoxs> stockBoxsesForUnpackingUserId) {
		this.stockBoxsesForUnpackingUserId = stockBoxsesForUnpackingUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByPasteUserId")
	public Set<StockBoxs> getStockBoxsesForPasteUserId() {
		return this.stockBoxsesForPasteUserId;
	}

	public void setStockBoxsesForPasteUserId(Set<StockBoxs> stockBoxsesForPasteUserId) {
		this.stockBoxsesForPasteUserId = stockBoxsesForPasteUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByLoadPalletsUserId")
	public Set<DamageInWarehouse> getDamageInWarehousesForLoadPalletsUserId() {
		return this.damageInWarehousesForLoadPalletsUserId;
	}

	public void setDamageInWarehousesForLoadPalletsUserId(
			Set<DamageInWarehouse> damageInWarehousesForLoadPalletsUserId) {
		this.damageInWarehousesForLoadPalletsUserId = damageInWarehousesForLoadPalletsUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfoByPasteUserId")
	public Set<DamageInWarehouse> getDamageInWarehousesForPasteUserId() {
		return this.damageInWarehousesForPasteUserId;
	}

	public void setDamageInWarehousesForPasteUserId(Set<DamageInWarehouse> damageInWarehousesForPasteUserId) {
		this.damageInWarehousesForPasteUserId = damageInWarehousesForPasteUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfo")
	public Set<Destroy> getDestroys() {
		return this.destroys;
	}

	public void setDestroys(Set<Destroy> destroys) {
		this.destroys = destroys;
	}

}
