package com.rescam.sywm.server.entity;
// Generated 2016-7-1 17:35:13 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CommodityBase generated by hbm2java
 */
@Entity
@Table(name = "commodity_base", catalog = "sywm")
public class CommodityBase implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Integer commodityBaseId;
	private Brands brands;
	private CommodityType commodityType;
	private StorageAreas storageAreas;
	private String commodityTypeCode;
	private String commodityTypeName;
	private String brandsCode;
	private String brandsName;
	private String commodityName;
	private String commodityStandard;
	private String commoditySinglePackingUnit;
	private BigDecimal commoditySingleWeight;
	private String commodityBarcode;
	private int commodityValidityPeriod;
	private String commodityOrigin;
	private boolean isDelete;
	private Set<DeliverOrderDetails> deliverOrderDetailses = new HashSet<DeliverOrderDetails>(0);
	private Set<CommodityPacking> commodityPackings = new HashSet<CommodityPacking>(0);
	private Set<StockPallets> stockPalletses = new HashSet<StockPallets>(0);
	private Set<DeliverOrderBatchDetails> deliverOrderBatchDetailses = new HashSet<DeliverOrderBatchDetails>(0);
	private Set<ReturnInWarehouse> returnInWarehouses = new HashSet<ReturnInWarehouse>(0);
	private Set<DeliverOrderGiftDetails> deliverOrderGiftDetailses = new HashSet<DeliverOrderGiftDetails>(0);
	private Set<LoadPallets> loadPalletses = new HashSet<LoadPallets>(0);
	private Set<DamageInWarehouse> damageInWarehouses = new HashSet<DamageInWarehouse>(0);
	private Set<ReturnDetails> returnDetailses = new HashSet<ReturnDetails>(0);
	private Set<GoodsOwnerCommodity> goodsOwnerCommodities = new HashSet<GoodsOwnerCommodity>(0);
	private Set<DamageDetails> damageDetailses = new HashSet<DamageDetails>(0);
	private Set<ArrivalPlanDetails> arrivalPlanDetailses = new HashSet<ArrivalPlanDetails>(0);
	private Set<StockBoxs> stockBoxses = new HashSet<StockBoxs>(0);
	private Set<DestroyDetails> destroyDetailses = new HashSet<DestroyDetails>(0);

	public CommodityBase() {
	}

	public CommodityBase(Brands brands, CommodityType commodityType, String commodityTypeCode, String commodityTypeName,
			String brandsCode, String brandsName, String commodityName, String commodityStandard,
			String commoditySinglePackingUnit, String commodityBarcode, int commodityValidityPeriod, boolean isDelete) {
		this.brands = brands;
		this.commodityType = commodityType;
		this.commodityTypeCode = commodityTypeCode;
		this.commodityTypeName = commodityTypeName;
		this.brandsCode = brandsCode;
		this.brandsName = brandsName;
		this.commodityName = commodityName;
		this.commodityStandard = commodityStandard;
		this.commoditySinglePackingUnit = commoditySinglePackingUnit;
		this.commodityBarcode = commodityBarcode;
		this.commodityValidityPeriod = commodityValidityPeriod;
		this.isDelete = isDelete;
	}

	public CommodityBase(Brands brands, CommodityType commodityType, StorageAreas storageAreas,
			String commodityTypeCode, String commodityTypeName, String brandsCode, String brandsName,
			String commodityName, String commodityStandard, String commoditySinglePackingUnit,
			BigDecimal commoditySingleWeight, String commodityBarcode, int commodityValidityPeriod,
			String commodityOrigin, boolean isDelete, Set<DeliverOrderDetails> deliverOrderDetailses,
			Set<CommodityPacking> commodityPackings, Set<StockPallets> stockPalletses,
			Set<DeliverOrderBatchDetails> deliverOrderBatchDetailses, Set<ReturnInWarehouse> returnInWarehouses,
			Set<DeliverOrderGiftDetails> deliverOrderGiftDetailses, Set<LoadPallets> loadPalletses,
			Set<DamageInWarehouse> damageInWarehouses, Set<ReturnDetails> returnDetailses,
			Set<GoodsOwnerCommodity> goodsOwnerCommodities, Set<DamageDetails> damageDetailses,
			Set<ArrivalPlanDetails> arrivalPlanDetailses, Set<StockBoxs> stockBoxses,
			Set<DestroyDetails> destroyDetailses) {
		this.brands = brands;
		this.commodityType = commodityType;
		this.storageAreas = storageAreas;
		this.commodityTypeCode = commodityTypeCode;
		this.commodityTypeName = commodityTypeName;
		this.brandsCode = brandsCode;
		this.brandsName = brandsName;
		this.commodityName = commodityName;
		this.commodityStandard = commodityStandard;
		this.commoditySinglePackingUnit = commoditySinglePackingUnit;
		this.commoditySingleWeight = commoditySingleWeight;
		this.commodityBarcode = commodityBarcode;
		this.commodityValidityPeriod = commodityValidityPeriod;
		this.commodityOrigin = commodityOrigin;
		this.isDelete = isDelete;
		this.deliverOrderDetailses = deliverOrderDetailses;
		this.commodityPackings = commodityPackings;
		this.stockPalletses = stockPalletses;
		this.deliverOrderBatchDetailses = deliverOrderBatchDetailses;
		this.returnInWarehouses = returnInWarehouses;
		this.deliverOrderGiftDetailses = deliverOrderGiftDetailses;
		this.loadPalletses = loadPalletses;
		this.damageInWarehouses = damageInWarehouses;
		this.returnDetailses = returnDetailses;
		this.goodsOwnerCommodities = goodsOwnerCommodities;
		this.damageDetailses = damageDetailses;
		this.arrivalPlanDetailses = arrivalPlanDetailses;
		this.stockBoxses = stockBoxses;
		this.destroyDetailses = destroyDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "commodity_base_id", unique = true, nullable = false)
	public Integer getCommodityBaseId() {
		return this.commodityBaseId;
	}

	public void setCommodityBaseId(Integer commodityBaseId) {
		this.commodityBaseId = commodityBaseId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "brands_id", nullable = false)
	public Brands getBrands() {
		return this.brands;
	}

	public void setBrands(Brands brands) {
		this.brands = brands;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "commodity_type_id", nullable = false)
	public CommodityType getCommodityType() {
		return this.commodityType;
	}

	public void setCommodityType(CommodityType commodityType) {
		this.commodityType = commodityType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "storage_areas_id")
	public StorageAreas getStorageAreas() {
		return this.storageAreas;
	}

	public void setStorageAreas(StorageAreas storageAreas) {
		this.storageAreas = storageAreas;
	}

	@Column(name = "commodity_type_code", nullable = false, length = 10)
	public String getCommodityTypeCode() {
		return this.commodityTypeCode;
	}

	public void setCommodityTypeCode(String commodityTypeCode) {
		this.commodityTypeCode = commodityTypeCode;
	}

	@Column(name = "commodity_type_name", nullable = false, length = 50)
	public String getCommodityTypeName() {
		return this.commodityTypeName;
	}

	public void setCommodityTypeName(String commodityTypeName) {
		this.commodityTypeName = commodityTypeName;
	}

	@Column(name = "brands_code", nullable = false, length = 20)
	public String getBrandsCode() {
		return this.brandsCode;
	}

	public void setBrandsCode(String brandsCode) {
		this.brandsCode = brandsCode;
	}

	@Column(name = "brands_name", nullable = false, length = 50)
	public String getBrandsName() {
		return this.brandsName;
	}

	public void setBrandsName(String brandsName) {
		this.brandsName = brandsName;
	}

	@Column(name = "commodity_name", nullable = false, length = 50)
	public String getCommodityName() {
		return this.commodityName;
	}

	public void setCommodityName(String commodityName) {
		this.commodityName = commodityName;
	}

	@Column(name = "commodity_standard", nullable = false, length = 50)
	public String getCommodityStandard() {
		return this.commodityStandard;
	}

	public void setCommodityStandard(String commodityStandard) {
		this.commodityStandard = commodityStandard;
	}

	@Column(name = "commodity_single_packing_unit", nullable = false, length = 10)
	public String getCommoditySinglePackingUnit() {
		return this.commoditySinglePackingUnit;
	}

	public void setCommoditySinglePackingUnit(String commoditySinglePackingUnit) {
		this.commoditySinglePackingUnit = commoditySinglePackingUnit;
	}

	@Column(name = "commodity_single_weight", precision = 10, scale = 3)
	public BigDecimal getCommoditySingleWeight() {
		return this.commoditySingleWeight;
	}

	public void setCommoditySingleWeight(BigDecimal commoditySingleWeight) {
		this.commoditySingleWeight = commoditySingleWeight;
	}

	@Column(name = "commodity_barcode", nullable = false, length = 20)
	public String getCommodityBarcode() {
		return this.commodityBarcode;
	}

	public void setCommodityBarcode(String commodityBarcode) {
		this.commodityBarcode = commodityBarcode;
	}

	@Column(name = "commodity_validity_period", nullable = false)
	public int getCommodityValidityPeriod() {
		return this.commodityValidityPeriod;
	}

	public void setCommodityValidityPeriod(int commodityValidityPeriod) {
		this.commodityValidityPeriod = commodityValidityPeriod;
	}

	@Column(name = "commodity_origin", length = 20)
	public String getCommodityOrigin() {
		return this.commodityOrigin;
	}

	public void setCommodityOrigin(String commodityOrigin) {
		this.commodityOrigin = commodityOrigin;
	}

	@Column(name = "is_delete", nullable = false)
	public boolean isIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(boolean isDelete) {
		this.isDelete = isDelete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<DeliverOrderDetails> getDeliverOrderDetailses() {
		return this.deliverOrderDetailses;
	}

	public void setDeliverOrderDetailses(Set<DeliverOrderDetails> deliverOrderDetailses) {
		this.deliverOrderDetailses = deliverOrderDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<CommodityPacking> getCommodityPackings() {
		return this.commodityPackings;
	}

	public void setCommodityPackings(Set<CommodityPacking> commodityPackings) {
		this.commodityPackings = commodityPackings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<StockPallets> getStockPalletses() {
		return this.stockPalletses;
	}

	public void setStockPalletses(Set<StockPallets> stockPalletses) {
		this.stockPalletses = stockPalletses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<DeliverOrderBatchDetails> getDeliverOrderBatchDetailses() {
		return this.deliverOrderBatchDetailses;
	}

	public void setDeliverOrderBatchDetailses(Set<DeliverOrderBatchDetails> deliverOrderBatchDetailses) {
		this.deliverOrderBatchDetailses = deliverOrderBatchDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<ReturnInWarehouse> getReturnInWarehouses() {
		return this.returnInWarehouses;
	}

	public void setReturnInWarehouses(Set<ReturnInWarehouse> returnInWarehouses) {
		this.returnInWarehouses = returnInWarehouses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<DeliverOrderGiftDetails> getDeliverOrderGiftDetailses() {
		return this.deliverOrderGiftDetailses;
	}

	public void setDeliverOrderGiftDetailses(Set<DeliverOrderGiftDetails> deliverOrderGiftDetailses) {
		this.deliverOrderGiftDetailses = deliverOrderGiftDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<LoadPallets> getLoadPalletses() {
		return this.loadPalletses;
	}

	public void setLoadPalletses(Set<LoadPallets> loadPalletses) {
		this.loadPalletses = loadPalletses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<DamageInWarehouse> getDamageInWarehouses() {
		return this.damageInWarehouses;
	}

	public void setDamageInWarehouses(Set<DamageInWarehouse> damageInWarehouses) {
		this.damageInWarehouses = damageInWarehouses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<ReturnDetails> getReturnDetailses() {
		return this.returnDetailses;
	}

	public void setReturnDetailses(Set<ReturnDetails> returnDetailses) {
		this.returnDetailses = returnDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<GoodsOwnerCommodity> getGoodsOwnerCommodities() {
		return this.goodsOwnerCommodities;
	}

	public void setGoodsOwnerCommodities(Set<GoodsOwnerCommodity> goodsOwnerCommodities) {
		this.goodsOwnerCommodities = goodsOwnerCommodities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<DamageDetails> getDamageDetailses() {
		return this.damageDetailses;
	}

	public void setDamageDetailses(Set<DamageDetails> damageDetailses) {
		this.damageDetailses = damageDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<ArrivalPlanDetails> getArrivalPlanDetailses() {
		return this.arrivalPlanDetailses;
	}

	public void setArrivalPlanDetailses(Set<ArrivalPlanDetails> arrivalPlanDetailses) {
		this.arrivalPlanDetailses = arrivalPlanDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<StockBoxs> getStockBoxses() {
		return this.stockBoxses;
	}

	public void setStockBoxses(Set<StockBoxs> stockBoxses) {
		this.stockBoxses = stockBoxses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodityBase")
	public Set<DestroyDetails> getDestroyDetailses() {
		return this.destroyDetailses;
	}

	public void setDestroyDetailses(Set<DestroyDetails> destroyDetailses) {
		this.destroyDetailses = destroyDetailses;
	}

}
